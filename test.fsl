// test comments

//
// test enum features
//
enum SOME_ENUM = { a, b, c };
enum SOME_ENUM2 = { a = 10, b = 10, c = 30 };

//
// test const features
//
const c1 = 1 + 1;
const c2[] = {1, 2, 3, 4};


//
//test the types
//
//with args
type t1(t x, t y, t z) { int a; }


type t1(t x, t y, t z) 
fcall1()
fcall2()
{ int a; }

// without args
type t2 { int a; }

type t2
	fcall1()
	fcall2()
{ int b; }

// more type stuff.. layout..
type t3
{
	if (x == y) {
		int16	p;
		int32	q;
	} else {
		int32	f;
	}

	align(SECTOR_SIZE);

	ptype(2)	a;

	union {
		int	f;
		int	g;
	} ugh;

	union {
		int	f;
		int	g;
	} ugh2[10];
	
	paramtype(x,y)	f;

}


//
// test functions
//
int hello(int r)
{
	int	x;
	int	y[10];

	x += 1;
	y[0] = x;

	if (x == y) {
		return x;
	} else if (z == y) {
		return z;
	} else {
		return a;
	}


	return z;
}


