Declarative filesystem language...
	1. Must be able to declare filesystem structures
	2. Declare relationships between entries in filesystem structures
	3. Implement filesystems using this..

Issues to take into account:
	1. Data layout (obvious)
		indexing
		error recovery / checksums
	2. Policy
		Block allocation (prealloc?)
		Consistency rules / Journalling
		Merging files / tail files
		When to write / grouping / queuing
		Defragmentation
		Delayed actinos
		Error handling
	3. Interface
		special data (acls, xattrs..)
		snapshots
		data marshalling


Event driven architecture
index x 
{
}

entity y
{
}

write {}
read {}

types (endianness specified..):
	{u,s}{8,16,32,64}
	{u,s}8[n]
	constraints (imposed by "higher" structure)

virtual variables -- derived from fs structures (i.e. in memory structures)

FAT:

BPB/DE/...

Must have way to virtually set which type to use (i.e. fat12/16/32..)
Must have way to describe filesystem layout (i.e. where FAT is located, where
DE's are located..)


